(function(a,r){typeof exports=="object"&&typeof module<"u"?r(exports,require("axios")):typeof define=="function"&&define.amd?define(["exports","axios"],r):(a=typeof globalThis<"u"?globalThis:a||self,r(a["sharai-sdk-ts"]={},a.axios))})(this,function(a,r){"use strict";var O=Object.defineProperty;var m=(a,r,i)=>r in a?O(a,r,{enumerable:!0,configurable:!0,writable:!0,value:i}):a[r]=i;var u=(a,r,i)=>m(a,typeof r!="symbol"?r+"":r,i);const l=class l{constructor(){u(this,"headersMap",new Map);this.headersMap.set("Content-Type","application/json")}static getInstance(){return l.instance||(l.instance=new l),l.instance}setHeaders({store_id:e,token:n,"Content-Type":o}){e&&this.headersMap.set("store_id",e),n&&this.headersMap.set("token",n),o&&this.headersMap.set("Content-Type",o)}getHeaders(){const e={};return this.headersMap.forEach((n,o)=>{e[o]=n}),e}};u(l,"instance");let i=l;const y=i.getInstance(),c=()=>y.getHeaders(),g=t=>y.setHeaders(t),s="https://sharai-server.onrender.com",f=async t=>{try{await r.delete(`${s}/api/product/delete-one?id=${t}`,{headers:c()})}catch(e){console.error(e)}},w=async(t,e,n=!0,o=!1)=>{const h=`${s}/api/product/get-by-category?id=${t}&active=${n}&similar=${o}`;try{const p=await r.get(h,{headers:c()}),{data:C}=await p.data;return{data:C}}catch(p){console.error(p)}},v=async(t,e=!0)=>{try{const n=await r.post(`${s}/api/product/post-many?active=${e}`,{products:[...t]},{headers:c()}),{result:o}=n.data;return o}catch(n){console.error("There was a problem posting the data:",n)}},$=t=>{if(t){const{id:e,category:n,products:o,active:h}=t;return e?d():o&&(o==null?void 0:o.length)>0?v(o,h):n?w(n):d()}else return d()},d=async t=>{const e=`${s}/api/product`;try{const n=await r.get(e,{headers:c()}),{data:o}=await n;return o}catch(n){console.error(n)}},T={DELETE:f,GET:$,POST:async t=>{try{const e=await r.post(`${s}/api/products/post-one`,{...t},{headers:c()}),{result:n}=e.data;return n}catch(e){console.error("There was a problem posting the data:",e)}},SEARCH:async t=>{try{return(await r.get(`${s}/api/product/search?phrase=${t}`,{headers:c()})).data.result}catch(e){console.error("There was a problem posting the data:",e)}}},P={DELETE:async t=>{try{await r.delete(`${s}/api/invoice/delete-one?id=${t}`,{headers:c()})}catch(e){console.error(e)}},GET:async(t=1)=>{try{const e=await r.get(`${s}/api/invoice/get-all?page=${t}`,{headers:c()}),{data:n}=await e.data;return{data:n}}catch(e){console.error(e)}},POST:async t=>{if(t)try{return await r.post(`${s}/api/orders/post-one`,t,{headers:c()}),!0}catch(e){return console.error("There was a problem posting the data:",e),!1}},SEARCH:async t=>{try{return(await r.get(`${s}/api/invoice/search?phrase=${t}`,{headers:c()})).data.result}catch(e){console.error("There was a problem posting the data:",e)}}},E={DELETE:async t=>{try{await r.delete(`${s}/api/category/delete-one?id=${t}`)}catch(e){console.error(e)}},GET:async()=>{try{const t=await r.get(`${s}/api/category/get-all`),{data:e}=await t.data;return{data:e}}catch(t){console.error(t)}},POST:async t=>{if(t)try{await r.post(`${s}/api/category/post-one`,t,{headers:c()})}catch(e){console.error("There was a problem posting the data:",e)}}};a.Category=E,a.Invoice=P,a.Product=T,a.config=g,Object.defineProperty(a,Symbol.toStringTag,{value:"Module"})});
